audio:
  chunk_size: 16384 # Lower chunk size (~0.37 sec at 44100 Hz) for reduced latency
  num_channels: 2
  sample_rate: 44100
  min_mean_abs: 0.001

model:
  num_sources: 4 # Typically, vocals, bass, drums, other
  num_channels: 2 # Must match audio.num_channels
  time_win_size: 2048 # Smaller window for near-real-time processing
  time_hop_size: 512 # Hop size for time-domain encoder/decoder
  time_ftr_size: 512 # Reduced feature dimension for faster processing
  spec_win_size: 2048 # Frequency-domain window size reduced accordingly
  spec_hop_size: 512
  spec_fft_size: 2048 # Smaller FFT for lower computational load
  rnn_hidden_size: 512 # Reduced hidden size for faster RNN operations
  rnn_num_layers: 1 # Fewer layers to reduce latency

training:
  batch_size: 4
  gradient_accumulation_steps: 4
  grad_clip: 0
  instruments:
    - vocals
    - bass
    - drums
    - other
  lr: 5.0e-05
  patience: 3
  reduce_factor: 0.95
  target_instrument: null
  num_epochs: 1000 # Adjust as needed
  num_steps: 1000
  q: 0.95
  coarse_loss_clip: true
  ema_momentum: 0.999
  optimizer: adam
  other_fix: false
  use_amp: true

augmentations:
  enable: true # Retain augmentations for robust training
  loudness: true
  loudness_min: 0.5
  loudness_max: 1.5
  mixup: true
  mixup_probs: [0.2, 0.02]
  mixup_loudness_min: 0.5
  mixup_loudness_max: 1.5
  all:
    channel_shuffle: 0.5
    random_inverse: 0.1
    random_polarity: 0.5

inference:
  batch_size: 1
  num_overlap: 2 # Reduced overlap to lower computational cost during real-time inference
